"use strict";(self.webpackChunkpcsx_2_net=self.webpackChunkpcsx_2_net||[]).push([[2590],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>u});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(r),u=o,f=d["".concat(l,".").concat(u)]||d[u]||m[u]||a;return r?n.createElement(f,i(i({ref:t},c),{},{components:r})):n.createElement(f,i({ref:t},c))}));function u(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},73857:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var n=r(87462),o=(r(67294),r(3905));const a={authors:["jake stine"],date:new Date("2010-09-14T00:00:00.000Z"),description:"Over the past two years I have become dearly intimate with Microsoft's Visual C++ 2008 compiler, and the methods it uses for optimizing code",draft:!1,tags:["devblog"],title:"MSVC 2008 Optimizer Fail"},i=void 0,s={permalink:"/blog/2010/msvc-2008-optimizer-fail",editUrl:"https://github.com/PCSX2/pcsx2-net-www/tree/master/blog/2010/msvc-2008-optimizer-fail/index.mdx",source:"@site/blog/2010/msvc-2008-optimizer-fail/index.mdx",title:"MSVC 2008 Optimizer Fail",description:"Over the past two years I have become dearly intimate with Microsoft's Visual C++ 2008 compiler, and the methods it uses for optimizing code",date:"2010-09-14T00:00:00.000Z",formattedDate:"September 14, 2010",tags:[{label:"devblog",permalink:"/blog/tags/devblog"}],readingTime:5.21,hasTruncateMarker:!0,authors:[{name:"Jake Stine",key:"jake stine"}],frontMatter:{authors:["jake stine"],date:"2010-09-14T00:00:00.000Z",description:"Over the past two years I have become dearly intimate with Microsoft's Visual C++ 2008 compiler, and the methods it uses for optimizing code",draft:!1,tags:["devblog"],title:"MSVC 2008 Optimizer Fail"},prevItem:{title:"New PCSX2 0.9.7 Beta (R3878)!",permalink:"/blog/2010/new-pcsx2-0-9-7-beta"},nextItem:{title:"PS2's Programmable DMA",permalink:"/blog/2010/ps2s-programmable-dma"}},l={authorsImageUrls:[void 0]},p=[],c={toc:p};function m(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,'Over the past two years I have become dearly intimate with Microsoft\'s\nVisual C++ 2008 compiler, and the methods it uses for optimizing code.\nNow generally speaking MSVC 2008 does well -- very well -- especially\nfor everyday "not-so-clever" code. Its global optimization feature (aka\nLinktime Code Generation, or LTCG) is also a tremendous advantage over\nGCC -- though GCC is in the process of (finally!) adding LTCG to their\nown C/C++ compiler. MSVC does have a few very annoying failings as an\noptimizer, though. ',(0,o.kt)("strong",{parentName:"p"},"The most glaring of which has to do with"),"\n",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"templated code"))," and ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"inlined functions"))," ."))}m.isMDXComponent=!0}}]);