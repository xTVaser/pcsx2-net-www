"use strict";(self.webpackChunkpcsx_2_net=self.webpackChunkpcsx_2_net||[]).push([[4150],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(n),m=a,b=c["".concat(l,".").concat(m)]||c[m]||d[m]||o;return n?r.createElement(b,s(s({ref:t},u),{},{components:n})):r.createElement(b,s({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=c;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var p=2;p<o;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},50847:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const o={authors:["jake stine"],date:new Date("2009-09-11T00:00:00.000Z"),description:"So starting with our next release of PCSX2 we'll be using an established versioning pattern",draft:!1,tags:["devblog"],title:"New Versioning Release Pattern"},s=void 0,i={permalink:"/blog/2009/new-versioning-release-pattern",editUrl:"https://github.com/PCSX2/pcsx2-net-www/tree/master/blog/2009/new-versioning-release-pattern/index.mdx",source:"@site/blog/2009/new-versioning-release-pattern/index.mdx",title:"New Versioning Release Pattern",description:"So starting with our next release of PCSX2 we'll be using an established versioning pattern",date:"2009-09-11T00:00:00.000Z",formattedDate:"September 11, 2009",tags:[{label:"devblog",permalink:"/blog/tags/devblog"}],readingTime:1.72,hasTruncateMarker:!0,authors:[{name:"Jake Stine",key:"jake stine"}],frontMatter:{authors:["jake stine"],date:"2009-09-11T00:00:00.000Z",description:"So starting with our next release of PCSX2 we'll be using an established versioning pattern",draft:!1,tags:["devblog"],title:"New Versioning Release Pattern"},prevItem:{title:"Svn Comments Are Re Enabled",permalink:"/blog/2009/svn-comments-are-re-enabled"},nextItem:{title:"Progress flood",permalink:"/blog/2009/progress-flood"}},l={authorsImageUrls:[void 0]},p=[],u={toc:p};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"From 0.9.5 onward PCSX2 has been a mostly open SVN revisioning process,\nwhere beta builds are SVN-marked and are widely built and distributed to\nusers. 0.9.5 itself was never released as an official 'stable' build,\nand after the release of 0.9.6 we just called all subsequent SVN builds\nof PCSX2 \"betas.\" (mostly because we were too lazy and/or busy to bother\nworrying of version numbers). This lackadaisical version pattern was a\nsource of confusion for users and developers alike."),(0,a.kt)("p",null,"So starting with our next release of PCSX2 we'll be using an established\nversioning pattern (which likely won't be for some time -- implementing\na new GUI is a complicated ordeal). The new patter will be based on some\nstandard Open Source convention, where odd-numbered versions denote\nSVN/devel builds (and will have SVN numbers affixed to the version) and\neven numbered versions denote stable releases. By chance this is already\nhow things have been playing out since 0.9.5, so mostly it just means\nwe're making a conscious effort to continue to apply the pattern in the\nfuture. Thus, the past-present-future will look something like this:"),(0,a.kt)("p",null,"Past:\n",(0,a.kt)("strong",{parentName:"p"},"0.9.4")," - Official stable release\n",(0,a.kt)("strong",{parentName:"p"},"0.9.5")," - Development build (SVN)"),(0,a.kt)("p",null,"Present:\n",(0,a.kt)("strong",{parentName:"p"},"0.9.6")," - Official stable release\n",(0,a.kt)("strong",{parentName:"p"},"0.9.7")," - Development build (SVN) ",(0,a.kt)("em",{parentName:"p"},"[","wx-enhanced!","]")),(0,a.kt)("p",null,"Future:\n",(0,a.kt)("strong",{parentName:"p"},"0.9.8")," - Official stable release\n",(0,a.kt)("strong",{parentName:"p"},"0.9.9")," - Development build (SVN)\n",(0,a.kt)("strong",{parentName:"p"},"1.0.0")," - Official stable release\n",(0,a.kt)("strong",{parentName:"p"},"1.1.0")," - Development build (SVN)"),(0,a.kt)("p",null,"This way when people file bug reports we can know from the main version\nnumber alone if the report is regarding a stable release or an SVN\nbuild, and furthermore users can have a clearer guide to the status of\nversions being released and such. Furthermore, odd versions will have\nthe SVN revision appended to them by default, like ",(0,a.kt)("strong",{parentName:"p"},"0.9.7.r1880")," ."),(0,a.kt)("p",null,"... and yes the ",(0,a.kt)("em",{parentName:"p"},"hope")," is that we're going to go to 1.0.0 after 0.9.9,\nand use a 1.0, 1.1, 1.2, 1.3, etc version pattern, shortening the\nprimary version numbers from three digits to two. But that's a long way\ndown the road yet, and anything could happen between now and then."))}d.isMDXComponent=!0}}]);